name: CMake

on: [pull_request]


jobs:
  linux-check-all-libs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        linalg_lib: [blis,openblas,netlib,intel-mkl]
        mpi_dist: [mpich]
        int_interface: [lp64,ilp64]
        thread: [sequential,openmp,pthreads]
        exclude:
          - linalg_lib: netlib
            int_interface: ilp64
          - linalg_lib: netlib
            thread: pthreads
          - linalg_lib: netlib
            thread: openmp
          - linalg_lib: intel-mkl
            thread: pthreads
    env:
      MKLROOT: /opt/intel/mkl
      NETLIB_PREFIX: /home/software/install/netlib-lp64-sequential
      LINALG_PREFIX: /home/software/install/${{matrix.linalg_lib}}-${{matrix.int_interface}}-${{matrix.thread}}
      #MPI_PREFIX: /home/software/install/${{matrix.mpi_dist}}
      CMAKE_PREFIX_PATH: '${LINALG_PREFIX};${NETLIB_PREFIX}'

    steps:
    - uses: actions/checkout@v2

    - name: Ubuntu Setup
      run: |
           sudo apt-get -yq update && sudo apt-get install make wget curl libomp5
           sudo make -C .github/workflows/linalg install/main
           sudo make -C .github/workflows/linalg install/cmake
           sudo apt-get clean
           sudo make -C .github/workflows/linalg apt-add-repository/intel-mkl

    - name: Build MPI
      run: |
           sudo make -C .github/workflows/linalg install/${{matrix.mpi_dist}}


    - name: Build Linalg
      env:
        BUILD_TARGET: ${{matrix.linalg_lib}}/${{matrix.int_interface}}-${{matrix.thread}} 
      run: |
           sudo make -C .github/workflows/linalg download/${{matrix.linalg_lib}} 
           sudo make -C .github/workflows/linalg install/${BUILD_TARGET}

    - name: Add-On NETLIB
      if: ${{ matrix.linalg_lib != 'intel-mkl' && matrix.linalg_lib != 'netlib' && matrix.int_interface == 'lp64' }} 
      run: |
           sudo make -C .github/workflows/linalg download/netlib
           sudo make -C .github/workflows/linalg install/netlib/lp64-sequential









    - name: FindBLAS Default
      run: |
        cmake -H${GITHUB_WORKSPACE}/examples/blas/default \
              -B${{runner.workspace}}/build-findblas-default \
              -DCMAKE_MODULE_PATH=${GITHUB_WORKSPACE} \
              -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} \
              -DIntelMKL_THREAD_LAYER=${{matrix.thread}}

    - name: FindBLAS Integer Specific
      run: |
        cmake -H${GITHUB_WORKSPACE}/examples/blas/${{matrix.int_interface}} \
              -B${{runner.workspace}}/build-findblas-${{matrix.int_interface}} \
              -DCMAKE_MODULE_PATH=${GITHUB_WORKSPACE} \
              -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} \
              -DIntelMKL_THREAD_LAYER=${{matrix.thread}}



    - name: FindLAPACK Default
      if: ${{ matrix.linalg_lib != 'blis' || matrix.int_interface != 'ilp64' }}
      run: |
        cmake -H${GITHUB_WORKSPACE}/examples/lapack/default \
              -B${{runner.workspace}}/build-findlapack-default \
              -DCMAKE_MODULE_PATH=${GITHUB_WORKSPACE} \
              -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} \
              -DIntelMKL_THREAD_LAYER=${{matrix.thread}}

    - name: FindLAPACK Integer Specific
      if: ${{ matrix.linalg_lib != 'blis' || matrix.int_interface != 'ilp64' }}
      run: |
        cmake -H${GITHUB_WORKSPACE}/examples/lapack/${{matrix.int_interface}} \
              -B${{runner.workspace}}/build-findlapack-${{matrix.int_interface}} \
              -DCMAKE_MODULE_PATH=${GITHUB_WORKSPACE} \
              -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} \
              -DIntelMKL_THREAD_LAYER=${{matrix.thread}}

